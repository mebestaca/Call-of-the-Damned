Call of the Damned Cast

    Events

        Unit - A unit Starts the effect of an ability

    Conditions

        (Ability being cast) Equal to CD_Ability

    Actions

        --------   --------

        -------- Set current index --------

        Set CD_Index1 = (CD_Index1 + 1)

        --------   --------

        -------- Store necessary values --------

        Set CD_CasterUnit[CD_Index1] = (Triggering unit)

        Set CD_Player[CD_Index1] = (Triggering player)

        Set CD_Level[CD_Index1] = (Level of CD_Ability for CD_CasterUnit[CD_Index1])

        --------   --------

        -------- Set necessary points --------

        Set CD_Point1 = (Position of CD_CasterUnit[CD_Index1])

        Set CD_Point2 = (CD_Point1 offset by CD_SummoningCircleAoE[CD_Level[CD_Index1]] towards (Facing of CD_CasterUnit[CD_Index1]) degrees)

        --------   --------

        -------- clearing the path --------

        Destructible - Pick every destructible within (CD_SummoningCircleAoE[CD_Level[CD_Index1]] + CD_ApprenticeAoE[CD_Level[CD_Index1]]) of CD_Point2 and do (Actions)

            Loop - Actions

                Set CD_Destructible = (Picked destructible)

                Unit - Order CD_Harvester to Harvest CD_Destructible

                If (All Conditions are True) then do (Then Actions) else do (Else Actions)

                    If - Conditions

                        (Current order of CD_Harvester) Equal to (Order(harvest))

                    Then - Actions

                        Destructible - Kill CD_Destructible

                        Unit - Order CD_Harvester to Stop

                    Else - Actions

        --------   --------

        -------- Calculate angles 360 (full circle) divided by the number of allowed helper + 1 --------

        -------- to create the perfect gap between the caster and the summoners --------

        Set CD_TempAngle = (Angle from CD_Point2 to CD_Point1)

        Set CD_AngleAdjustment = (360.00 / ((Real(CD_ApprenticeUnitAllowed[CD_Level[CD_Index1]])) + 1.00))

        --------   --------

        -------- Create the dummy for the summoning circle on where the other models will be attached --------

        Unit - Create 1 CD_DummyUnitType for Neutral Passive at CD_Point2 facing CD_TempAngle degrees

        Set CD_SummoningCircleUnit[CD_Index1] = (Last created unit)

        --------   --------

        -------- Change the size and transparency of the summoning circle --------

        Animation - Change CD_SummoningCircleUnit[CD_Index1]'s size to (CD_SummoningCircleSize[CD_Level[CD_Index1]]%, 100.00%, 100.00%) of its original size

        Animation - Change CD_SummoningCircleUnit[CD_Index1]'s vertex coloring to (100.00%, 100.00%, 100.00%) with CD_SummoningCircleTransparency% transparency

        --------   --------

        -------- Apply the summoning circle model --------

        Special Effect - Create a special effect attached to the origin of CD_SummoningCircleUnit[CD_Index1] using CD_SummoningCircleSFX

        Set CD_SummoningCircleEffect[CD_Index1] = (Last created special effect)

        --------   --------

        -------- Apply the models found at the center of the summoning circle --------

        Special Effect - Create a special effect at CD_Point2 using CD_SummoningGroundSFX1

        Set CD_SummoningGroundEffect1[CD_Index1] = (Last created special effect)

        Special Effect - Create a special effect at CD_Point2 using CD_SummoningGroundSFX2

        Set CD_SummoningGroundEffect2[CD_Index1] = (Last created special effect)

        --------   --------

        -------- LOGIC --------

        -------- add the anti double cast --------

        Unit - Add Switch Call of the Damned  to CD_CasterUnit[CD_Index1]

        --------   --------

        -------- time left before the summoning is complete --------

        Set CD_CastingTimeLeft[CD_Index1] = CD_CastingTime[CD_Level[CD_Index1]]

        --------   --------

        -------- flag to indicate that the summoning is not done yet --------

        Set CD_IsComplete[CD_Index1] = False

        --------   --------

        -------- flag to indicate that the slot is for the caster --------

        Set CD_DefaultState = True

        --------   --------

        -------- dispose unneeded point --------

        Custom script:   call RemoveLocation(udg_CD_Point1)

        --------   --------

        -------- FORMATION CIRCLE --------

        -------- loops to number of allowed helpers + the caster --------

        For each (Integer CD_Looper2) from 1 to (CD_ApprenticeUnitAllowed[CD_Level[CD_Index1]] + 1), do (Actions)

            Loop - Actions

                --------   --------

                -------- set current index --------

                Set CD_Index2 = (CD_Index2 + 1)

                --------   --------

                -------- make a reference to the caster --------

                Set CD_CasterId[CD_Index2] = CD_CasterUnit[CD_Index1]

                --------   --------

                -------- recycle the point variable and make a point towards the angle that we calculated earlier --------

                Set CD_Point1 = (CD_Point2 offset by CD_SummoningCircleAoE[CD_Level[CD_Index1]] towards CD_TempAngle degrees)

                --------   --------

                -------- recycle the point variable and make a point towards the angle that we calculated earlier --------

                -------- creates an indicator where helpers must stand --------

                Unit - Create 1 CD_DummyUnitType for Neutral Passive at CD_Point1 facing CD_Angle[CD_Index2] degrees

                Set CD_FormationUnit[CD_Index2] = (Last created unit)

                --------   --------

                -------- applies the model for the indicator --------

                Special Effect - Create a special effect attached to the origin of CD_FormationUnit[CD_Index2] using CD_FormationSFX

                Set CD_FormationEffect[CD_Index2] = (Last created special effect)

                --------   --------

                -------- indicates whether the spot has been occupied --------

                -------- the default state is true for the caster so that no helper may occupy it --------

                Set CD_IsOccupied[CD_Index2] = CD_DefaultState

                --------   --------

                -------- defaultstate is true if its the main caster --------

                -------- it is also true if the spot has been occupied by a helper --------

                If (All Conditions are True) then do (Then Actions) else do (Else Actions)

                    If - Conditions

                        CD_DefaultState Equal to True

                    Then - Actions

                        --------   --------

                        -------- animation time default --------

                        Set CD_SubstituteTimeLeft[CD_Index2] = 0.00

                        --------   --------

                        -------- all about the soul --------

                        Set CD_SoulAngle[CD_Index2] = CD_TempAngle

                        Set CD_SoulDistance[CD_Index2] = CD_SummoningCircleAoE[CD_Level[CD_Index1]]

                        Set CD_SoulSpeed[CD_Index2] = (CD_SummoningCircleAoE[CD_Level[CD_Index1]] / (CD_SoulDelay / 0.03))

                        Set CD_SoulCurrentHeight[CD_Index2] = 0.00

                        --------   --------

                        Set CD_IsInward[CD_Index2] = True

                        Set CD_IsUpward[CD_Index2] = True

                        --------   --------

                        Unit - Create 1 CD_DummyUnitType for Neutral Passive at CD_Point1 facing CD_Angle[CD_Index2] degrees

                        Set CD_SoulUnit[CD_Index2] = (Last created unit)

                        --------   --------

                        Unit - Add Storm Crow Form to CD_SoulUnit[CD_Index2]

                        Unit - Remove Storm Crow Form from CD_SoulUnit[CD_Index2]

                        --------   --------

                        Special Effect - Create a special effect attached to the origin of CD_SoulUnit[CD_Index2] using CD_SoulSFX

                        Set CD_SoulEffect[CD_Index2] = (Last created special effect)

                        --------   --------

                        -------- change the value of default state to create vacant spots --------

                        Set CD_DefaultState = False

                    Else - Actions

                --------   --------

                -------- clean up --------

                Custom script:   call RemoveLocation(udg_CD_Point1)

                --------   --------

                -------- adjust and store angles for later use --------

                Set CD_Angle[CD_Index2] = CD_TempAngle

                Set CD_TempAngle = (CD_TempAngle + CD_AngleAdjustment)

                --------   --------

        --------   --------

        -------- dispose point --------

        Custom script:   call RemoveLocation(udg_CD_Point2)

        --------   --------

        -------- start summoning --------

        If (All Conditions are True) then do (Then Actions) else do (Else Actions)

            If - Conditions

                CD_Index1 Equal to 1

            Then - Actions

                Trigger - Turn on Call of the Damned Effect <gen>

            Else - Actions

