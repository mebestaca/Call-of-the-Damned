Call of the Damned Effect

    Events

        Time - Every 0.03 seconds of game time

    Conditions

    Actions

        --------   --------

        -------- enumerates through all the casters --------

        For each (Integer CD_Looper1) from 1 to CD_Index1, do (Actions)

            Loop - Actions

                --------   --------

                -------- checks if the caster is still casting --------

                If (All Conditions are True) then do (Then Actions) else do (Else Actions)

                    If - Conditions

                        (Current order of CD_CasterUnit[CD_Looper1]) Equal to (Order(CD_AbilityOrder))

                    Then - Actions

                        --------   --------

                        -------- checks if the casting is complete --------

                        If (All Conditions are True) then do (Then Actions) else do (Else Actions)

                            If - Conditions

                                CD_CastingTimeLeft[CD_Looper1] Greater than 0.00

                            Then - Actions

                                Set CD_CastingTimeLeft[CD_Looper1] = (CD_CastingTimeLeft[CD_Looper1] - 0.03)

                            Else - Actions

                                Set CD_IsComplete[CD_Looper1] = True

                                Unit - Order CD_CasterUnit[CD_Looper1] to Stop

                        --------   --------

                        -------- enumerates all the available spots and souls --------

                        For each (Integer CD_Looper2) from 1 to CD_Index2, do (Actions)

                            Loop - Actions

                                --------   --------

                                -------- checks if its for the right caster --------

                                If (All Conditions are True) then do (Then Actions) else do (Else Actions)

                                    If - Conditions

                                        CD_CasterId[CD_Looper2] Equal to CD_CasterUnit[CD_Looper1]

                                    Then - Actions

                                        --------   --------

                                        -------- checks if the spot is already occupied --------

                                        If (All Conditions are True) then do (Then Actions) else do (Else Actions)

                                            If - Conditions

                                                CD_IsOccupied[CD_Looper2] Equal to True

                                            Then - Actions

                                                --------   --------

                                                -------- checks if its time to animate --------

                                                If (All Conditions are True) then do (Then Actions) else do (Else Actions)

                                                    If - Conditions

                                                        CD_SubstituteTimeLeft[CD_Looper2] Greater than 0.00

                                                    Then - Actions

                                                        Set CD_SubstituteTimeLeft[CD_Looper2] = (CD_SubstituteTimeLeft[CD_Looper2] - 0.03)

                                                    Else - Actions

                                                        --------   --------

                                                        -------- animate substitute unit and create notify special effect --------

                                                        Set CD_Point1 = (Position of CD_FormationUnit[CD_Looper2])

                                                        --------   --------

                                                        Set CD_SubstituteTimeLeft[CD_Looper2] = CD_SubstituteInterval

                                                        --------   --------

                                                        Animation - Play CD_SubstituteUnit[CD_Looper2]'s CD_SubstituteAnimation animation

                                                        --------   --------

                                                        Special Effect - Create a special effect at CD_Point1 using CD_NotifySFX

                                                        Special Effect - Destroy (Last created special effect)

                                                        --------   --------

                                                        Custom script:   call RemoveLocation(udg_CD_Point1)

                                                --------   --------

                                                -------- SOUL ANIMATION --------

                                                --------   --------

                                                -------- soul rotation --------

                                                If (All Conditions are True) then do (Then Actions) else do (Else Actions)

                                                    If - Conditions

                                                        CD_IsClockwise Equal to True

                                                    Then - Actions

                                                        Set CD_SoulAngle[CD_Looper2] = (CD_SoulAngle[CD_Looper2] - CD_SoulTurnRate)

                                                    Else - Actions

                                                        Set CD_SoulAngle[CD_Looper2] = (CD_SoulAngle[CD_Looper2] + CD_SoulTurnRate)

                                                --------   --------

                                                -------- soul distance --------

                                                If (All Conditions are True) then do (Then Actions) else do (Else Actions)

                                                    If - Conditions

                                                        CD_IsInward[CD_Looper2] Equal to True

                                                    Then - Actions

                                                        If (All Conditions are True) then do (Then Actions) else do (Else Actions)

                                                            If - Conditions

                                                                CD_SoulDistance[CD_Looper2] Greater than 0.00

                                                            Then - Actions

                                                                Set CD_SoulDistance[CD_Looper2] = (CD_SoulDistance[CD_Looper2] - CD_SoulSpeed[CD_Looper2])

                                                            Else - Actions

                                                                Set CD_IsInward[CD_Looper2] = False

                                                    Else - Actions

                                                        If (All Conditions are True) then do (Then Actions) else do (Else Actions)

                                                            If - Conditions

                                                                CD_SoulDistance[CD_Looper2] Less than CD_SummoningCircleAoE[CD_Level[CD_Looper1]]

                                                            Then - Actions

                                                                Set CD_SoulDistance[CD_Looper2] = (CD_SoulDistance[CD_Looper2] + CD_SoulSpeed[CD_Looper2])

                                                            Else - Actions

                                                                Set CD_IsInward[CD_Looper2] = True

                                                --------   --------

                                                -------- soul height --------

                                                If (All Conditions are True) then do (Then Actions) else do (Else Actions)

                                                    If - Conditions

                                                        CD_IsUpward[CD_Looper2] Equal to True

                                                    Then - Actions

                                                        If (All Conditions are True) then do (Then Actions) else do (Else Actions)

                                                            If - Conditions

                                                                CD_SoulCurrentHeight[CD_Looper2] Less than CD_SoulMaxHeight

                                                            Then - Actions

                                                                Set CD_SoulCurrentHeight[CD_Looper2] = (CD_SoulCurrentHeight[CD_Looper2] + CD_SoulHeightSpeed)

                                                            Else - Actions

                                                                Set CD_IsUpward[CD_Looper2] = False

                                                    Else - Actions

                                                        If (All Conditions are True) then do (Then Actions) else do (Else Actions)

                                                            If - Conditions

                                                                CD_SoulCurrentHeight[CD_Looper2] Greater than 0.00

                                                            Then - Actions

                                                                Set CD_SoulCurrentHeight[CD_Looper2] = (CD_SoulCurrentHeight[CD_Looper2] - CD_SoulHeightSpeed)

                                                            Else - Actions

                                                                Set CD_IsUpward[CD_Looper2] = True

                                                --------   --------

                                                -------- move soul to correct position --------

                                                Set CD_Point1 = (Position of CD_SummoningCircleUnit[CD_Looper1])

                                                Set CD_Point2 = (CD_Point1 offset by CD_SoulDistance[CD_Looper2] towards CD_SoulAngle[CD_Looper2] degrees)

                                                --------   --------

                                                Animation - Change CD_SoulUnit[CD_Looper2] flying height to CD_SoulCurrentHeight[CD_Looper2] at 0.00

                                                --------   --------

                                                Custom script:   call SetUnitY(udg_CD_SoulUnit[udg_CD_Looper2], GetLocationY(udg_CD_Point2))

                                                Custom script:   call SetUnitX(udg_CD_SoulUnit[udg_CD_Looper2], GetLocationX(udg_CD_Point2))

                                                --------   --------

                                                Custom script:   call RemoveLocation(udg_CD_Point1)

                                                Custom script:   call RemoveLocation(udg_CD_Point2)

                                            Else - Actions

                                                --------   --------

                                                -------- checks if nearby helper unit-type is nearby --------

                                                Set CD_Point1 = (Position of CD_FormationUnit[CD_Looper2])

                                                Set CD_TempGroup = (Units within CD_ApprenticeAoE[CD_Level[CD_Looper1]] of CD_Point1)

                                                --------   --------

                                                Unit Group - Pick every unit in CD_TempGroup and do (Actions)

                                                    Loop - Actions

                                                        --------   --------

                                                        Set CD_TempUnit = (Picked unit)

                                                        --------   --------

                                                        -------- checks if nearby units are valid helpers --------

                                                        If (All Conditions are True) then do (Then Actions) else do (Else Actions)

                                                            If - Conditions

                                                                (Unit-type of CD_TempUnit) Equal to CD_ApprenticeUnitType

                                                                (CD_TempUnit is alive) Equal to True

                                                                (Owner of CD_TempUnit) Equal to CD_Player[CD_Looper1]

                                                            Then - Actions

                                                                --------   --------

                                                                -------- necessarry check if the spot has been occupied in case there are more than one  nearby helper --------

                                                                If (All Conditions are True) then do (Then Actions) else do (Else Actions)

                                                                    If - Conditions

                                                                        CD_IsOccupied[CD_Looper2] Equal to False

                                                                    Then - Actions

                                                                        --------   --------

                                                                        -------- spot is not occupied --------

                                                                        Set CD_IsOccupied[CD_Looper2] = True

                                                                        --------   --------

                                                                        -------- hide the helper unit --------

                                                                        Set CD_HiddenUnit[CD_Looper2] = CD_TempUnit

                                                                        Unit - Make CD_HiddenUnit[CD_Looper2] Invulnerable

                                                                        Unit - Hide CD_HiddenUnit[CD_Looper2]

                                                                        --------   --------

                                                                        -------- souls --------

                                                                        Set CD_SoulAngle[CD_Looper2] = CD_Angle[CD_Looper2]

                                                                        Set CD_SoulDistance[CD_Looper2] = CD_SummoningCircleAoE[CD_Level[CD_Looper1]]

                                                                        Set CD_SoulSpeed[CD_Looper2] = (CD_SummoningCircleAoE[CD_Level[CD_Looper1]] / (CD_SoulDelay / 0.03))

                                                                        Set CD_SoulCurrentHeight[CD_Looper2] = 0.00

                                                                        --------   --------

                                                                        Set CD_IsInward[CD_Looper2] = True

                                                                        Set CD_IsUpward[CD_Looper2] = True

                                                                        --------   --------

                                                                        Unit - Create 1 CD_DummyUnitType for Neutral Passive at CD_Point1 facing CD_Angle[CD_Looper2] degrees

                                                                        Set CD_SoulUnit[CD_Looper2] = (Last created unit)

                                                                        --------   --------

                                                                        Unit - Add Storm Crow Form to CD_SoulUnit[CD_Looper2]

                                                                        Unit - Remove Storm Crow Form from CD_SoulUnit[CD_Looper2]

                                                                        --------   --------

                                                                        Special Effect - Create a special effect attached to the origin of CD_SoulUnit[CD_Looper2] using CD_SoulSFX

                                                                        Set CD_SoulEffect[CD_Looper2] = (Last created special effect)

                                                                        --------   --------

                                                                        Unit - Create 1 CD_SubstituteUnitType for Neutral Passive at CD_Point1 facing (CD_Angle[CD_Looper2] + 180.00) degrees

                                                                        Set CD_SubstituteUnit[CD_Looper2] = (Last created unit)

                                                                        --------   --------

                                                                        -------- animation time left --------

                                                                        Set CD_SubstituteTimeLeft[CD_Looper2] = 0.00

                                                                        --------   --------

                                                                        -------- casting time reduction --------

                                                                        Set CD_CastingTimeLeft[CD_Looper1] = (CD_CastingTimeLeft[CD_Looper1] - CD_CastingTimeReduction[CD_Level[CD_Looper1]])

                                                                    Else - Actions

                                                            Else - Actions

                                                                --------   --------

                                                                Set CD_TempUnit = No unit

                                                --------   --------

                                                Custom script:   call DestroyGroup(udg_CD_TempGroup)

                                                --------   --------

                                                Custom script:   call RemoveLocation(udg_CD_Point1)

                                    Else - Actions

                    Else - Actions

                        --------   --------

                        -------- checks if the summoning is complete --------

                        If (All Conditions are True) then do (Then Actions) else do (Else Actions)

                            If - Conditions

                                CD_IsComplete[CD_Looper1] Equal to True

                            Then - Actions

                                --------   --------

                                Set CD_Point1 = (Position of CD_SummoningCircleUnit[CD_Looper1])

                                --------   --------

                                Special Effect - Create a special effect at CD_Point1 using CD_SpawnSFX

                                Special Effect - Destroy (Last created special effect)

                                --------   --------

                                -------- create summoned units --------

                                -------- it will loop as many summoned units are needed --------

                                For each (Integer CD_TempInt) from 1 to CD_SummonedUnitCount[CD_Level[CD_Looper1]], do (Actions)

                                    Loop - Actions

                                        --------   --------

                                        Unit - Create 1 CD_SummonedUnitType[CD_Level[CD_Looper1]] for CD_Player[CD_Looper1] at CD_Point1 facing (Facing of CD_SummoningCircleUnit[CD_Looper1]) degrees

                                        Set CD_TempUnit = (Last created unit)

                                        --------   --------

                                        Unit - Add a CD_SummonedUnitDuration[CD_Level[CD_Looper1]] second Generic expiration timer to CD_TempUnit

                                        Unit - Add classification of Summoned to CD_TempUnit

                                --------   --------

                                For each (Integer CD_Looper2) from 1 to CD_Index2, do (Actions)

                                    Loop - Actions

                                        --------   --------

                                        If (All Conditions are True) then do (Then Actions) else do (Else Actions)

                                            If - Conditions

                                                CD_CasterId[CD_Looper2] Equal to CD_CasterUnit[CD_Looper1]

                                                CD_IsOccupied[CD_Looper2] Equal to True

                                            Then - Actions

                                                --------   --------

                                                Set CD_Point2 = (CD_Point1 offset by CD_BonusUnitOffset[CD_Level[CD_Looper1]] towards CD_Angle[CD_Looper2] degrees)

                                                -------- create summoned units --------

                                                -------- it will loop as many summoned units are needed --------

                                                For each (Integer CD_TempInt) from 1 to CD_BonusUnitCount[CD_Level[CD_Looper1]], do (Actions)

                                                    Loop - Actions

                                                        --------   --------

                                                        Unit - Create 1 CD_BonusUnitType[CD_Level[CD_Looper1]] for CD_Player[CD_Looper1] at CD_Point2 facing CD_Angle[CD_Looper2] degrees

                                                        Set CD_TempUnit = (Last created unit)

                                                        --------   --------

                                                        Unit - Add a CD_SummonedUnitDuration[CD_Level[CD_Looper1]] second Generic expiration timer to CD_TempUnit

                                                        Unit - Add classification of Summoned to CD_TempUnit

                                                --------   --------

                                                Custom script:   call RemoveLocation(udg_CD_Point2)

                                            Else - Actions

                                --------   --------

                                Custom script:   call RemoveLocation(udg_CD_Point1)

                            Else - Actions

                        --------   --------

                        -------- DEINDEXING --------

                        For each (Integer CD_Looper2) from 1 to CD_Index2, do (Actions)

                            Loop - Actions

                                If (All Conditions are True) then do (Then Actions) else do (Else Actions)

                                    If - Conditions

                                        CD_CasterId[CD_Looper2] Equal to CD_CasterUnit[CD_Looper1]

                                    Then - Actions

                                        --------   --------

                                        Special Effect - Destroy CD_SoulEffect[CD_Looper2]

                                        Special Effect - Destroy CD_FormationEffect[CD_Looper2]

                                        --------   --------

                                        Unit - Add a 0.01 second Generic expiration timer to CD_FormationUnit[CD_Looper2]

                                        Unit - Add a 0.01 second Generic expiration timer to CD_SubstituteUnit[CD_Looper2]

                                        Unit - Add a 0.01 second Generic expiration timer to CD_SoulUnit[CD_Looper2]

                                        --------   --------

                                        Unit - Unhide CD_HiddenUnit[CD_Looper2]

                                        Unit - Make CD_HiddenUnit[CD_Looper2] Vulnerable

                                        --------   --------

                                        Set CD_CasterId[CD_Looper2] = CD_CasterId[CD_Index2]

                                        --------   --------

                                        Set CD_HiddenUnit[CD_Looper2] = CD_HiddenUnit[CD_Index2]

                                        --------   --------

                                        Set CD_Angle[CD_Looper2] = CD_Angle[CD_Index2]

                                        --------   --------

                                        Set CD_FormationUnit[CD_Looper2] = CD_FormationUnit[CD_Index2]

                                        Set CD_FormationEffect[CD_Looper2] = CD_FormationEffect[CD_Index2]

                                        --------   --------

                                        Set CD_IsOccupied[CD_Looper2] = CD_IsOccupied[CD_Index2]

                                        --------   --------

                                        Set CD_SoulUnit[CD_Looper2] = CD_SoulUnit[CD_Index2]

                                        --------   --------

                                        Set CD_IsUpward[CD_Looper2] = CD_IsUpward[CD_Index2]

                                        Set CD_IsInward[CD_Looper2] = CD_IsInward[CD_Index2]

                                        --------   --------

                                        Set CD_SoulAngle[CD_Looper2] = CD_SoulAngle[CD_Index2]

                                        Set CD_SoulCurrentHeight[CD_Looper2] = CD_SoulCurrentHeight[CD_Index2]

                                        Set CD_SoulDistance[CD_Looper2] = CD_SoulDistance[CD_Index2]

                                        Set CD_SoulSpeed[CD_Looper2] = CD_SoulSpeed[CD_Index2]

                                        --------   --------

                                        Set CD_SubstituteTimeLeft[CD_Looper2] = CD_SubstituteTimeLeft[CD_Index2]

                                        Set CD_SubstituteUnit[CD_Looper2] = CD_SubstituteUnit[CD_Index2]

                                        --------   --------

                                        Set CD_Looper2 = (CD_Looper2 - 1)

                                        Set CD_Index2 = (CD_Index2 - 1)

                                    Else - Actions

                        --------   --------

                        Special Effect - Create a special effect attached to the origin of CD_SummoningCircleUnit[CD_Looper1] using CD_CleanSFX

                        Special Effect - Destroy (Last created special effect)

                        --------   --------

                        Special Effect - Destroy CD_SummoningCircleEffect[CD_Looper1]

                        Special Effect - Destroy CD_SummoningGroundEffect1[CD_Looper1]

                        Special Effect - Destroy CD_SummoningGroundEffect2[CD_Looper1]

                        --------   --------

                        Unit - Add a CD_SummoningCircleDelay second Generic expiration timer to CD_SummoningCircleUnit[CD_Looper1]

                        --------   --------

                        Unit - Remove CD_SwitchAbility from CD_CasterUnit[CD_Looper1]

                        --------   --------

                        Set CD_CasterUnit[CD_Looper1] = CD_CasterUnit[CD_Index1]

                        Set CD_Level[CD_Looper1] = CD_Level[CD_Index1]

                        Set CD_Player[CD_Looper1] = CD_Player[CD_Index1]

                        --------   --------

                        Set CD_CastingTimeLeft[CD_Looper1] = CD_CastingTimeLeft[CD_Index1]

                        --------   --------

                        Set CD_SummoningCircleUnit[CD_Looper1] = CD_SummoningCircleUnit[CD_Index1]

                        Set CD_SummoningCircleEffect[CD_Looper1] = CD_SummoningCircleEffect[CD_Index1]

                        Set CD_SummoningGroundEffect1[CD_Looper1] = CD_SummoningGroundEffect1[CD_Index1]

                        Set CD_SummoningGroundEffect2[CD_Looper1] = CD_SummoningGroundEffect2[CD_Index1]

                        --------   --------

                        Set CD_Looper1 = (CD_Looper1 - 1)

                        Set CD_Index1 = (CD_Index1 - 1)

                        --------   --------

                        If (All Conditions are True) then do (Then Actions) else do (Else Actions)

                            If - Conditions

                                CD_Index1 Equal to 0

                            Then - Actions

                                Trigger - Turn off (This trigger)

                            Else - Actions
